Problem Link - https://leetcode.com/problems/search-a-2d-matrix/description/


Solution


class Solution {
public:

    bool binarySearch(vector<int>v,int target)
    {
        int low=0;
        int high=v.size()-1;
        int mid=(low+high)/2;
        while(low<=high)
        {
            mid=(low+high)/2;
            if(v[mid]==target)
                return true;
            else if(v[mid]<target)
                low=mid+1;
            else
                high=mid-1;
        }
        return false;
    }

    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        bool answer;
        int m=matrix.size();
        int n=matrix[0].size();
        for(int i=0;i<m;++i)
        {
            if(i<m-1)
            {
                if(target>=matrix[i][0] && target<=matrix[i][n-1])
                {
                    answer=binarySearch(matrix[i],target);
                    return answer;
                }
                if(target>matrix[i][n-1] && target<matrix[i+1][0])
                    return false;
            }
            else
            {
                if(target>=matrix[i][0] && target<=matrix[i][n-1])
                {
                    answer=binarySearch(matrix[i],target);
                    return answer;
                }
                else
                    return false;
            }
        }
        return answer;
    }
};