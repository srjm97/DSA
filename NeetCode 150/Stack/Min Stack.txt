Problem Link - https://leetcode.com/problems/min-stack/description/

Solution

class MinStack {

private:
    stack<int>st;
    stack<pair<int,int>>minimum_st;

public:
    MinStack() {
    }
    
    void push(int val) {
        st.push(val);
        if(minimum_st.empty() || minimum_st.top().first>val)
            minimum_st.push({val,1});
        else if(minimum_st.top().first==val)
            minimum_st.top().second++;
    }
    
    void pop() {
        if (st.top() == minimum_st.top().first) {
            minimum_st.top().second--;
            if (minimum_st.top().second == 0) {
                minimum_st.pop();
            }
        }
        st.pop();
    }
    
    int top() {
        return st.top();
    }
    
    int getMin() {
        return minimum_st.top().first;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */